Project Setup
-------------

### Modules and Artifacts

Unfiltered's core, binding, server, and other modules are published
with references to their underlying dependencies, so that applications
need only explicitly depend on Unfiltered and other top-level
dependencies. Keep in mind that server modules and binding modules are
not generally co-dependent, so that if you are using for example
unfiltered-jetty, you will also need to specify unfiltered-filter.

Each module is [cross-built][sbt] against several versions of Scala
and published to the [sonatype][sonatype] repository with the
organization-id "net.databinder". The modules have the Scala version
they are built against appended. For Scala $scala$, the full artifact
names are as follows:

* unfiltered_$scala$
* unfiltered-filter_$scala$
* unfiltered-filter-async_$scala$
* unfiltered-netty_$scala$
* unfiltered-netty-websockets_$scala$
* unfiltered-jetty_$scala$
* unfiltered-jetty-ajp_$scala$
* unfiltered-netty-server_$scala$
* unfiltered-uploads_$scala$
* unfiltered-util_$scala$
* unfiltered-spec_$scala$
* unfiltered-scalatest_$scala$
* unfiltered-json_$scala$
* unfiltered-oauth_$scala$

[sonatype]: https://oss.sonatype.org/content/repositories/releases/net/databinder/
[sbt]: http://www.scala-sbt.org/release/docs/Detailed-Topics/Cross-Build.html

### Source Dependencies

Some Unfiltered modules depend on external Scala libraries which are
not [cross-built][sbt] across our supported versions of Scala. The
overhead to produce binary artifacts for these modules is great, as we
must maintain a map of Scala versions to compatible library versions,
and also handle the case where there is no compatible version.

Instead we tag releases of these modules in github and encourage their
use as *source dependencies*, which you may build locally against a
compatible set of artifacts.

* [unfiltered/unfiltered-scalate](https://github.com/unfiltered/unfiltered-scalate) -- Interface to the [Scalate](http://scalate.fusesource.org/) template engine.

### Build Tools

#### Configuring sbt projects

When using sbt with **binary dependencies** it's best to have the
Scala version [automatically appended][sbt] so it will always match
your project's. In an sbt 0.11.x project:

```scala
libraryDependencies += "net.databinder" %% "unfiltered-filter" % "$version$"
```
To use **source dependencies** with sbt, create a project build such
as `project/build.scala`:

```scala
import sbt._
object MyApp extends Build
{
  lazy val root =
    Project("root", file(".")) dependsOn(unfilteredScalate)
  lazy val unfilteredScalate =
    uri("git://github.com/unfiltered/unfiltered-scalate#$version$")
}
```

#### Maven

For Maven, specify the full artifact name:

```xml
<dependency>
  <groupId>net.databinder</groupId>
  <artifactId>unfiltered-filter_$scala$</artifactId>
  <version>$version$</version>
</dependency>
```

To use source dependencies with Maven, your best bet is to check out
the project as a submodule.

### Template Projects

For a new project the easiest the easiest option to apply a
[giter8][g8] template for the Unfiltered backend of your choice.

* **unfiltered/unfiltered.g8** for embedded Jetty
* **unfiltered/unfiltered-scalate.g8** for Scalate template evaluation
* **unfiltered/unfiltered-war.g8** for a servlet container
* **unfiltered/unfiltered-netty.g8** for Netty
* **unfiltered/unfiltered-gae.g8** for Google App Engine

So for example:

```sh
g8 n8han/unfiltered-netty --name=justplayin
cd justplayin
sbt # *or whatever your 0.11.x command is
> run
```

[g8]: https://github.com/n8han/giter8
